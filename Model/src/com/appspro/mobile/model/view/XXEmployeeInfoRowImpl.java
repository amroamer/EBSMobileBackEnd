package com.appspro.mobile.model.view;

import oracle.jbo.domain.BlobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 10 18:33:05 GMT+03:00 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XXEmployeeInfoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserName {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getUserName();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        FullName {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getFullName();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setFullName((String)value);
            }
        }
        ,
        EmployeeNumber {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getEmployeeNumber();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setEmployeeNumber((String)value);
            }
        }
        ,
        EmailAddress {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        GradeName {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getGradeName();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setGradeName((String)value);
            }
        }
        ,
        PositionName {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getPositionName();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setPositionName((String)value);
            }
        }
        ,
        OgrName {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getOgrName();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setOgrName((String)value);
            }
        }
        ,
        Supervisor {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getSupervisor();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setSupervisor((String)value);
            }
        }
        ,
        Image {
            public Object get(XXEmployeeInfoRowImpl obj) {
                return obj.getImage();
            }

            public void put(XXEmployeeInfoRowImpl obj, Object value) {
                obj.setImage((BlobDomain)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XXEmployeeInfoRowImpl object);

        public abstract void put(XXEmployeeInfoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int FULLNAME = AttributesEnum.FullName.index();
    public static final int EMPLOYEENUMBER = AttributesEnum.EmployeeNumber.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int GRADENAME = AttributesEnum.GradeName.index();
    public static final int POSITIONNAME = AttributesEnum.PositionName.index();
    public static final int OGRNAME = AttributesEnum.OgrName.index();
    public static final int SUPERVISOR = AttributesEnum.Supervisor.index();
    public static final int IMAGE = AttributesEnum.Image.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XXEmployeeInfoRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserName.
     * @param value value to set the  UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FullName.
     * @return the FullName
     */
    public String getFullName() {
        return (String) getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FullName.
     * @param value value to set the  FullName
     */
    public void setFullName(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmployeeNumber.
     * @return the EmployeeNumber
     */
    public String getEmployeeNumber() {
        return (String) getAttributeInternal(EMPLOYEENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmployeeNumber.
     * @param value value to set the  EmployeeNumber
     */
    public void setEmployeeNumber(String value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmailAddress.
     * @return the EmailAddress
     */
    public String getEmailAddress() {
        return (String) getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmailAddress.
     * @param value value to set the  EmailAddress
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GradeName.
     * @return the GradeName
     */
    public String getGradeName() {
        return (String) getAttributeInternal(GRADENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GradeName.
     * @param value value to set the  GradeName
     */
    public void setGradeName(String value) {
        setAttributeInternal(GRADENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PositionName.
     * @return the PositionName
     */
    public String getPositionName() {
        return (String) getAttributeInternal(POSITIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PositionName.
     * @param value value to set the  PositionName
     */
    public void setPositionName(String value) {
        setAttributeInternal(POSITIONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OgrName.
     * @return the OgrName
     */
    public String getOgrName() {
        return (String) getAttributeInternal(OGRNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OgrName.
     * @param value value to set the  OgrName
     */
    public void setOgrName(String value) {
        setAttributeInternal(OGRNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Supervisor.
     * @return the Supervisor
     */
    public String getSupervisor() {
        return (String) getAttributeInternal(SUPERVISOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Supervisor.
     * @param value value to set the  Supervisor
     */
    public void setSupervisor(String value) {
        setAttributeInternal(SUPERVISOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Image.
     * @return the Image
     */
    public BlobDomain getImage() {
        return (BlobDomain) getAttributeInternal(IMAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Image.
     * @param value value to set the  Image
     */
    public void setImage(BlobDomain value) {
        setAttributeInternal(IMAGE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
